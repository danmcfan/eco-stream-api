services:
  api:
    depends_on:
      db:
        condition: service_healthy
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      LISTENER_URL: 0.0.0.0:80
      MINIO_URL: minio:9000
      POSTGRES_URL: postgres://postgres:password@db:5432/postgres?sslmode=disable
    ports:
      - "8080:80"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://api/health" ]
      interval: 5s
      timeout: 10s
      retries: 10

  db:
    image: postgres:alpine
    volumes:
      - pg-data:/var/lib/postgresql/data/pgdata
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: postgres
    expose:
      - 5432
    healthcheck:
      test: "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"
      interval: 5s
      timeout: 10s
      retries: 10
    ports:
      - 5432:5432

  minio:
    image: quay.io/minio/minio:latest
    command: server /data --console-address ":9001"
    volumes:
      - minio-data:/data
    expose:
      - 9000
      - 9001
    ports:
      - 9000:9000
      - 9001:9001

volumes:
  pg-data:
  minio-data:
